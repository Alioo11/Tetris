const BOARD_WIDTH=16,BOARD_HEIGHT=16;let direction="down";const colors=["#FF5555","#55ff55","#5555ff","#edea39","#39edb7","#ff8030"];function getRandomArbitrary(t,r){return Math.round(Math.random()*(r-t)+t)}let cells=document.querySelectorAll(".cell");window.addEventListener("keydown",t=>{switch(t.key){case"ArrowUp":direction="up";break;case"ArrowDown":direction="down";break;case"ArrowLeft":direction="left";break;case"ArrowRight":direction="right";break;case"b":makeBrick();break;case"x":stop()}currentBrick.move(direction)});class Brick{constructor(t,r){this.id=t,this.indexCell=r}print(){this.pattern.forEach(t=>{cells[t].style.backgroundColor=this.color,cells[t].setAttribute("key",this.id)})}remove(){this.pattern.forEach(t=>{cells[t].style.backgroundColor="#3c3c3c",cells[t].setAttribute("key",0)})}Up(){return this.pattern.map(t=>t-=BOARD_WIDTH)}Down(){return this.pattern.map(t=>t+=BOARD_WIDTH)}Left(){return this.pattern.map(t=>t-=1)}Right(){return this.pattern.map(t=>t+=1)}isValidMove(t){let r=this.shadow(t),e=!0;switch(t){case"up":r.forEach(t=>{t<=0&&(e=!1)});break;case"down":r.forEach(t=>{t>=BOARD_HEIGHT*BOARD_WIDTH&&(e=!1)});break;case"right":r.forEach(t=>{t%BOARD_WIDTH==0&&(e=!1)});break;case"left":{let t=[];for(let r=0;r<BOARD_HEIGHT;r++)t.push(BOARD_WIDTH*r-1);r.forEach(r=>{t.includes(r)&&(e=!1)});break}}return e&&r.forEach(t=>{0!=cells[t].getAttribute("key")&&(e=!1)}),e}shadow(t){let r=[];switch(t){case"up":r=[...this.Up()];break;case"down":r=[...this.Down()];break;case"left":r=[...this.Left()];break;case"right":r=[...this.Right()]}return r=r.filter(t=>!this.pattern.includes(t))}isvalidRotation(){}rotate(t){}move(t){if(this.isValidMove(t)){switch(this.remove(),t){case"down":this.pattern=this.Down();break;case"up":this.pattern=this.Up();break;case"left":this.pattern=this.Left();break;case"right":this.pattern=this.Right();break;default:throw new Error(" unknown direction")}this.print()}}}class StrBrick extends Brick{constructor(t,r,e){super(t,r),this.pattern=[5,6,7,8],this.color=e}}class Lbrick extends Brick{constructor(t,r,e){super(t,r),this.pattern=[22,6,7,8],this.color=e}}class boxBrick extends Brick{constructor(t,r,e){super(t,r),this.pattern=[6,7,22,23],this.color=e}}class halfStraight extends Brick{constructor(t,r,e){super(t,r),this.pattern=[6,22,23,38],this.color=e}}class curlyBrick extends Brick{constructor(t,r,e){super(t,r),this.pattern=[38,22,23,7],this.color=e}}const levelCheck=()=>{const t=[];for(let r=0;r<BOARD_HEIGHT;r++){let e=!0;for(let t=0;t<BOARD_WIDTH;t++)0==cells[BOARD_HEIGHT*r+t].getAttribute("key")&&(e=!1);e?t.push(r):t.push()}return t},delLevel=t=>{for(let r=0;r<t.length;r++)for(let e=0;e<BOARD_WIDTH;e++)cells[BOARD_HEIGHT*t[r]+e].setAttribute("key",0),cells[BOARD_HEIGHT*t[r]+e].style.backgroundColor="#3c3c3c"},gravity=t=>{if(t){let r=0;for(let e=BOARD_HEIGHT-2;e>=0;e--)t.includes(e+1)&&r++,r>0&&fallDown(e,r)}},fallDown=(t,r)=>{for(let e=0;e<BOARD_WIDTH;e++)cells[t*BOARD_WIDTH+e+r*BOARD_WIDTH].setAttribute("key",cells[t*BOARD_WIDTH+e].getAttribute("key")),cells[t*BOARD_WIDTH+e+r*BOARD_WIDTH].style.backgroundColor=cells[t*BOARD_WIDTH+e].style.backgroundColor,cells[t*BOARD_WIDTH+e].style.backgroundColor="#3c3c3c",cells[t*BOARD_WIDTH+e].setAttribute("key",0)};let currentBrick,interval;const stop=()=>{clearInterval(interval)},brickCycle=()=>{switch(getRandomArbitrary(0,4)){case 0:currentBrick=new StrBrick(getRandomArbitrary(0,100),2,colors[getRandomArbitrary(0,colors.length-1)]);break;case 1:currentBrick=new Lbrick(getRandomArbitrary(0,100),2,colors[getRandomArbitrary(0,colors.length-1)]);break;case 2:currentBrick=new boxBrick(getRandomArbitrary(0,100),2,colors[getRandomArbitrary(0,colors.length-1)]);break;case 3:currentBrick=new halfStraight(getRandomArbitrary(0,100),2,colors[getRandomArbitrary(0,colors.length-1)]);break;case 4:currentBrick=new curlyBrick(getRandomArbitrary(0,100),2,colors[getRandomArbitrary(0,colors.length-1)])}currentBrick.print(),clearInterval(interval),interval=setInterval(()=>{if(currentBrick.move("down"),!currentBrick.isValidMove("down")){let t=levelCheck();delLevel(t),gravity(t),brickCycle()}},500)};